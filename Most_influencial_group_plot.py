#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Mar  5 11:28:32 2020

@author: watsonlevens
"""
import matplotlib.pyplot as plt
#import scipy as sc

import pickle 
import scipy.sparse as sp 
import tweepy;
import os 

#import scipy as sc
import pandas as pd
import numpy as np

Politicians_list=[0.008711249828745334, 0.008387072928081904,0.0083528413750115,0.008140341378080252,0.007942162815875039, 0.007556171635722899,0.007419032768280808,
                  0.0062317285927158215 ,0.006008434081801666,0.0058714233355950515,0.005546744169843689,
                  0.005203425075957721,0.005018532429899345,0.004655982696661694,0.004086144634303292
            ,0.003846115028744832,0.0038094727757740647,0.003762575996714327,0.0035812330793893723,
            0.0035147292238018497,0.003319537819897524,0.0030107824916060506,0.0030102851970370288,0.002820161112428825,0.002600752961096135,
            0.0025530285635164533,0.002486739517980894,0.0024816411898212695,0.0023240884428445746,
            0.002175020554611661, 0.0021161184298315256 ,0.0020993839691300312,0.0019835754737283565,0.0018434498378832012,0.0016879853163726537,0.0016302738428440428,
            0.001617252119674704,0.001563962148998042,0.0015232320171084928,0.0015178698980026592,0.0014973570940731826,0.001478227714341083,0.0014606435024191813, 
            0.0014430989561752849, 0.001411179636834118, 0.0014102514530220827, 0.0013807345703804159,0.0013665346677644687]

counts1, bins1 = np.histogram(Politicians_list)
#plt.hist(bins1[:-1], bins1, weights=counts1)
len(Politicians_list)

#MusicArtist_Eigvectors suming to 1 or normalized Eigvectors
MusicArtist_Eigvectors= [0.006354339236659708,0.0058714233355950515,0.005704424626911665,
                         0.0054700230645153124,0.005321510793347298, 0.005077069523843297,
                         0.004872777783687127, 0.004374512308744228,0.004226166908003512,
                         0.004210946985433825 ,0.0038263407309523587 ,0.00349015742901009 ,0.003480185115289119 ,
			0.0027273162278815943,0.0027239272766405595 ,0.0024375802560728183, 0.0022895085718806834 ,0.0021848589764064848,
            0.00212949618281536,0.002069083777459986,0.001793886012734551 ,0.0017850299153759459,
            0.0017537940501537875,0.001735524706561445,0.0016243225191564042,0.0015529542714023965]
counts2, bins2 = np.histogram(MusicArtist_Eigvectors)
len(MusicArtist_Eigvectors)

# Media_companies suming to 1 or normalized Eigvectors
Media_companies=[0.00785824641183678,0.004977549399701789,0.0038831988359549884,
                 0.0037131434209003162,0.00361708196182988,0.003447400663435513,0.002679268507960531,
                 0.002556890307761538,0.002523231980076435,0.0022171552826298424,
                 0.0019282889825599986,0.0017712366459626424,0.0016742538942132606,0.001594467530942305]


counts3, bins3 = np.histogram(Media_companies)
len(Media_companies)

#Jornalists_Eigvectors suming to 1 or normalized Eigvectors
Jornalists_Eigvectors= [0.006749500149744205, 0.007997509578002156,0.006381700053849562, 
                        0.00533598558306544,0.004000399736792366, 0.003906561767515505,
                        0.0022650294026571433,0.002019091138565856, 0.0018091149911988332,
                        0.0018078833036030135]
counts4, bins4 = np.histogram(Jornalists_Eigvectors)
len(Jornalists_Eigvectors)
#plt.hist(bins4[:-1], bins4, weights=counts4)

plt.plot(bins1[:-1],counts1,color= 'black', linewidth=1.5,label="Politicians",linestyle='-.')
plt.plot(bins2[:-1],counts2,color= 'red', linewidth=1.5,label="Music artists",linestyle=':')
plt.plot(bins3[:-1],counts3,color= 'green', linewidth=1.5,label="Journalists",linestyle='--')
plt.plot(bins4[:-1],counts4,color= 'blue', linewidth=1.5,label="Media and companies",linestyle='-')

#plt.plot(Eigenvectors_list, politician_list,color= 'red', linewidth=3,label="politicians",linestyle='-')
plt.ylabel("Frequency of eigenvector centralities", fontsize=12)  
plt.xlabel("Eigenvector centrality", fontsize=12)  
#plt.title("Industrywise Twitter users")
plt.legend(loc="upper right")
# for caption plt.xlabel("Number of users out of 100 most central Twitter accounts", fontsize=12)  
#plt.savefig('Industry_wise.pdf')



